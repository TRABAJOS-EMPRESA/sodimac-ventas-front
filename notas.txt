1. create-next-app next-auth-radix
2. npm install @radix-ui/themes

import '@radix-ui/themes/styles.css';

3. limpiar proyeccto src completamente en page.tsx
4. borrar los estilos de global.tsx
5. en layout importar estilos 
import '@radix-ui/themes/styles.css';
import { Theme } from '@radix-ui/themes';

6.envolver en Theme el children

para buscar iconos https://www.radix-ui.com/icons

instalar npm install react-hook-form

7. llamar la importancion en donde ocupare el formulkario 
empzare con signinform 

8. instalar npm install next-auth

guia https://next-auth.js.org/configuration/initialization#route-handlers-app

9. luego creamos el directorio de api y cramos este archivo route.ts y ciopiamos ete codigo

import NextAuth from "next-auth"

const handler = NextAuth({
  ...
})

export { handler as GET, handler as POST }

10. luego creamos las credentials siguiendo la guia en el menu lateral providers -> credemtials

en el mismo archivo route import CredentialsProvider from "next-auth/providers/credentials"

11 realizar middleware para proteger ruta

export { default } from "next-auth/middleware"

// esto protege las rutas donde no se ha logeado el usuario
export const config = { matcher: ['/dashboard'] }

12 instalar prisma

npm install prisma --save-dev

13 instalar sql

npx prisma init --datasource-provider sqlite

esto añade una ruta al .env 

añade una carpeta llamada prisma 

14 crear migracion 

npx prisma migrate dev --name init 

15 crear register en carpeta api->auth->register 

16 instalar axios

17 crear la funcion post import { NextResponse } from "next/server";

export async function POST(request: Request){
    const data = await request.json();
    console.log(data);    
    return NextResponse.json('register')
} en carpeta register archivo route.ts

18 llamar en el botn de signup 

19 configurar prisma 

crear carpeta libs-> prisma.ts ademas buea practica no crear instnacias d prisma innecesarias 
y solo utuilizar la misma


20 llamar a prisma en la funcion 

import prisma from "@/libs/prisma";
import { NextResponse } from "next/server";


export async function POST(request: Request){
    const data = await request.json();
    console.log(data);    

    // llamo a prisma y creo el usuario
    const newUser = await prisma.user.create({data:data});
    return NextResponse.json(newUser, {
        status: 201
    })
}

21 para ver el dato creado y la tabla excribir en consola:

npx prisma studio

si elimino base de datos 

digo npx prisma db push y se vuelve a crear

pero sin el dato guardado

esta base de datos es para desarrollo despues s ecambiara par aproduccion 

22 instalar bcrypt y el tipo

npm  i bcrypt 
npm i @types/bcrypt -D

23 si yo escribo api/auth/signout me da la opcion de jacer logout 
pero no es la interfaz que quiero de vista asi que se hara otra 
